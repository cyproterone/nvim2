#!/usr/bin/env python3

from argparse import ArgumentParser, Namespace
from http.client import HTTPResponse
from os import chdir
from pathlib import Path, PurePath, PurePosixPath
from typing import Optional, cast
from urllib.parse import urlsplit
from urllib.request import build_opener


def _fetch(uri: str, timeout: float) -> bytes:
    opener = build_opener()
    with opener.open(uri, timeout=timeout) as resp:
        return cast(HTTPResponse, resp).read()


def _parse_args() -> Namespace:
    parser = ArgumentParser()
    parser.add_argument("src")
    parser.add_argument("dest", nargs="?", default=None)
    parser.add_argument("--cd", type=Path, default=None)
    parser.add_argument("-t", "--timeout", type=float, default=60.0)
    return parser.parse_args()


def main() -> None:
    args = _parse_args()
    cd: Optional[Path] = args.cd
    if cd:
        chdir(cd)

    src: str = args.src
    parsed = urlsplit(src)
    name = PurePosixPath(parsed.path).name
    suffix = "".join(PurePath(name).suffixes)
    dest = Path(args.dest if args.dest else name).with_suffix(suffix).resolve()

    payload = _fetch(src, timeout=args.timeout)
    dest.write_bytes(payload)
    print(dest, end="")


main()

