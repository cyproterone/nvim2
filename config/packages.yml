---
- git:
    uri: https://github.com/nvim-treesitter/nvim-treesitter
  vals:
    ts_opts:
      highlight:
        enable: True
      incremental_selection:
        enable: True
        keymaps:
          init_selection: "gs"
          node_incremental: "gs"
          node_decremental: "gs"
          scope_incremental: "gs"
      textobjects:
        select:
          enable: True
          keymaps:
            is: "@statement.outer"
            as: "@statement.outer"

            ib: "@block.inner"
            ab: "@block.outer"

            ia: "@parameter.inner"
            aa: "@parameter.outer"

            ic: "@conditional.inner"
            ac: "@conditional.outer"

            iC: "@class.inner"
            aC: "@class.outer"

            if: "@function.inner"
            af: "@function.outer"

            iF: "@call.inner"
            aF: "@call.outer"

            iL: "@loop.inner"
            aL: "@loop.outer"
  keys:
    - modes: n
      maps:
        "<c-h>": "<nop>"
        "<c-l>": &init_sel "<cmd>lua require'nvim-treesitter.incremental_selection'.init_selection()<cr>"
        "gl": *init_sel
    - modes: v
      maps:
        "<c-h>": "<esc><cmd>lua require'nvim-treesitter.incremental_selection'.node_decremental()<cr>"
        "<c-l>": &inc_sel "<esc><cmd>lua require'nvim-treesitter.incremental_selection'.node_incremental()<cr>"
        "gl": *inc_sel

  lua: |-
    require'nvim-treesitter.configs'.setup(vim.g.ts_opts)

- git:
    uri: https://github.com/nvim-treesitter/nvim-treesitter-textobjects

- git:
    uri: https://github.com/neovim/nvim-lspconfig

- git:
    uri: https://github.com/ms-jpq/chadtree
  keys:
    - modes: n
      maps:
        "<leader>v": "<cmd>CHADopen<cr>"

- git:
    uri: https://github.com/ms-jpq/coq-nvim
    branch: bwaaak
  keys:
    - modes: n
      maps:
        "<leader>z": "<cmd>COQnow<cr>"
  lua: |-
    vim.o.completefunc = "COQ_omnifunc"

- git:
    uri: https://github.com/junegunn/fzf

- git:
    uri: https://github.com/junegunn/fzf.vim
  vals:
    fzf_buffers_jump: True
    fzf_preview_window: right:wrap
    fzf_layout:
      window:
        width: 0.9
        height: 0.9
  keys:
    - modes: n
      maps:
        "<leader>o": "<cmd>BLines<cr>"
        "<leader>p": "<cmd>Buffers<cr>"
        "<leader>P": "<cmd>Files<cr>"
    - modes: n
      opts:
        silent: False
      maps:
        "<leader>O": ":Rg "
  lua: |-
    local fzf_opts = vim.env.FZF_DEFAULT_OPTS
    local new_opts = (fzf_opts or "") .. " --no-border"
    vim.env.FZF_DEFAULT_OPTS = new_opts

- git:
    uri: https://github.com/glepnir/lspsaga.nvim
  keys:
    - modes: n
      maps:
        "R": "<cmd>Lspsaga rename<cr>"
        "K": "<cmd>Lspsaga hover_doc<cr>"
        "H": "<cmd>Lspsaga preview_definition<cr>"

        # "<c-f>": "<cmd>lua require'lspsaga.action'.smart_scroll_with_saga(1)<cr>"
        # "<c-b>": "<cmd>lua require'lspsaga.action'.smart_scroll_with_saga(-1)<cr>"

        "L": "<cmd>Lspsaga show_line_diagnostics<cr>"
        "g[": "<cmd>Lspsaga diagnostic_jump_prev<cr>"
        "g]": "<cmd>Lspsaga diagnostic_jump_next<cr>"

        "go": "<cmd>Lspsaga signature_help<cr>"

        "gh": "<cmd>Lspsaga lsp_finder<cr>"
        "gw": "<cmd>Lspsaga code_action<cr>"
        "gW": "<cmd>Lspsaga range_code_action<cr>"

- git:
    uri: https://github.com/kosayoda/nvim-lightbulb
  viml: |-
    autocmd CursorHold,CursorHoldI * lua require'nvim-lightbulb'.update_lightbulb()

- git:
    uri: https://github.com/sainnhe/edge
  vals:
    edge_style: neon
    edge_menu_selection_background: purple
  viml: |-
    set background=light
    colorscheme edge

- git:
    uri: https://github.com/tpope/vim-repeat

- git:
    uri: https://github.com/tpope/vim-surround

- git:
    uri: https://github.com/junegunn/vim-easy-align
  keys:
    - modes: nv
      opts:
        noremap: False
      maps:
        "ga": "<plug>(EasyAlign)"

- git:
    uri: https://github.com/tpope/vim-unimpaired

- git:
    uri: https://github.com/mhinz/vim-signify

- git:
    uri: https://github.com/sheerun/vim-polyglot
  viml: |-
    let g:polyglot_disabled = ['sensible']

- git:
    uri: https://github.com/jpalardy/vim-slime
  vals:
    slime_target: tmux
    slime_no_mappings: True
    slime_default_config:
      socket_name: default
      target_pane: "{last}"
    slime_cell_delimiter: "# @@"
  keys:
    - modes: n
      opts:
        noremap: False
      maps:
        "<leader>s": "<Plug>SlimeSendCell"
    - modes: v
      opts:
        noremap: False
      maps:
        "<leader>s": "<Plug>SlimeRegionSend"
  viml: |-
    let g:slime_paste_file = tempname()

- git:
    uri: https://github.com/norcalli/nvim-colorizer.lua
  lua: |-
    local go, colourizer = pcall(require, "colorizer")
    if go then
      colourizer.setup()
    end
