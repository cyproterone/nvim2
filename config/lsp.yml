---
- server: diagnosticls
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
    - zsh
  root:
    fallback: cwd

  init_options:
    linters:
      shellcheck:
        sourceName: shellcheck
        command: shellcheck
        args:
          - --format=json
          - --exclude=SC1090
          - "-"
        rootPatterns:
          - .shellcheckrc
          - shellcheckrc
        parseJson:
          column: column
          endColumn: endColumn
          endLine: endLine
          line: line
          message: ${message} [${code}]
          security: level
        securities:
          error: error
          info: info
          style: hint
          warning: warning

    filetypes:
      sh: &sh
        - shellcheck
      zsh: *sh

  install:
    npm:
      - diagnostic-languageserver

- server: jsonls
  bin: vscode-json-languageserver
  args:
    - --stdio
  install:
    npm:
      - vscode-json-languageserver

- server: yamlls
  bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server

- server: texlab
  bin: texlab
  filetypes:
    - tex
    - plaintex
  settings:
    latex:
      build:
        executable: tectonic
        args:
          - --keep-logs
          - --keep-intermediates
          - --outdir
          - build
          - --
          - "%f"
        outputDirectory: build
        onSave: True

  install:
    script:
      env:
        MAC_URI: https://github.com/latex-lsp/texlab/releases/download/v3.2.0/texlab-x86_64-macos.tar.gz
        LINUX_URI: https://github.com/latex-lsp/texlab/releases/download/v3.2.0/texlab-x86_64-linux.tar.gz
      body: |-
        set -eu
        set -o pipefail

        if [[ "$OS" == 'Darwin' ]]
        then
          URI="$MAC_URI"
        else
          URI="$LINUX_URI"
        fi

        get "$URI" "$(mktemp)" | unpack - -- "$TMP_DIR"
        mv -- "$TMP_DIR/$BIN_NAME" "$BIN_PATH"
        chmod +x -- "$BIN_PATH"

- server: bashls
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

- server: dockerls
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

- server: pyright
  bin: pyright-langserver
  install:
    npm:
      - pyright

- server: intelephense
  bin: intelephense
  install:
    npm:
      - intelephense

- server: rust_analyzer
  bin: rust-analyzer
  install:
    script:
      env:
        MAC_OS: https://github.com/rust-analyzer/rust-analyzer/releases/download/2021-06-14/rust-analyzer-x86_64-apple-darwin.gz
        LINUX: https://github.com/rust-analyzer/rust-analyzer/releases/download/2021-06-14/rust-analyzer-x86_64-unknown-linux-gnu.gz
      body: |-
        set -eu
        set -o pipefail

        if [[ "$OS" == 'Darwin' ]]
        then
          URI="$MAC_OS"
        else
          URI="$LINUX"
        fi

        T="$(get "$URI" --cd "$TMP_DIR")"
        gzip --decompress -- "$T"
        mv -- "$TMP_DIR/$BIN_NAME"* "$BIN_PATH"
        chmod +x -- "$BIN_PATH"

- server: gopls
  bin: gopls
  install:
    go:
      - golang.org/x/tools/gopls@latest

- server: sourcekit
  bin: xcrun

- server: sqlls
  bin: sql-language-server
  args:
    - up
    - --method
    - stdio
  install:
    npm:
      - sql-language-server

- server: rome
  bin: rome
  install:
    npm:
      - rome

- server: tsserver
  bin: typescript-language-server
  install:
    npm:
      - typescript
      - typescript-language-server

- server: html
  bin: html-languageserver
  args:
    - --stdio
  install:
    npm:
      - vscode-html-languageserver-bin

- server: cssls
  bin: css-languageserver
  args:
    - --stdio
  install:
    npm:
      - vscode-css-languageserver-bin

- server: tailwindcss-language-server
  bin: tailwindcss-language-server
  install:
    script:
      required:
        - git
      env:
        URI: https://github.com/tailwindlabs/tailwindcss-intellisense/releases/download/v0.6.12/vscode-tailwindcss-0.6.12.vsix
      body: |-
        set -eu
        set -o pipefail

        get "$URI" | unpack - -- "$TMP_DIR"

- server: graphql
  bin: graphql-lsp
  filetypes:
    - graphql
    - javascript
    - javascript.jsx
    - javascriptreact
    - typescript
    - typescript.tsx
    - typescriptreact
  root:
    fallback: none
    exact:
      - .graphqlrc
      - .graphqlrc.js
      - .graphqlrc.json
      - .graphqlrc.yaml
      - .graphqlrc.yml
      - graphql.config.js
      - graphql.config.json
      - graphql.config.yaml
      - graphql.config.yml
  install:
    npm:
      - graphql-language-service-cli

- server: fsautocomplete
  bin: fsauto

- server: r_language_server
  bin: R

- server: vimls
  bin: vim-language-server
  install:
    npm:
      - vim-language-server
# - server: sumneko_lua
#   bin: lua-ls
#   install:
#     script:
#       required:
#         - git
#         - ninja
#       env:
#         URI: https://github.com/sumneko/lua-language-server.git
#         TAG: "2.0.3"
#       body: |-
#         set -eu
#         set -o pipefail

#         if [[ -d "$LIB_PATH" ]]
#         then
#           cd "$LIB_PATH" || exit 1
#           OPTS=(--recurse-submodules)
#           git pull "${OPTS[@]}" origin "refs/tags/${TAG}:refs/tags/${TAG}"
#         else
#           OPTS=(--depth=1 --recurse-submodules --shallow-submodules)
#           git clone "${OPTS[@]}" --branch "$TAG" "$URI" "$LIB_PATH"
#         fi

#         (
#           cd "$LIB_PATH/3rd/luamake" || exit 1
#           ./compile/install.sh
#           cd ../.. || exit 1
#           ./3rd/luamake/luamake rebuild
#         )

#         ln --symbolic --force -- "$LIB_PATH/"*'/lua-language-server' "$BIN_PATH"

