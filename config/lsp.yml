---
- server: diagnosticls
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
  root:
    fallback: cwd

  init_options:
    linters:
      shellcheck:
        sourceName: shellcheck
        command: shellcheck
        args:
          - --format=json
          - --exclude=SC1090
          - "-"
        rootPatterns:
          - .shellcheckrc
          - shellcheckrc
        parseJson:
          column: column
          endColumn: endColumn
          endLine: endLine
          line: line
          message: ${message} [${code}]
          security: level
        securities:
          error: error
          info: info
          style: hint
          warning: warning

      hadolint:
        sourceName: hadolint
        command: hadolint
        args:
          - --format=json
          - "-"
        rootPatterns:
          - .hadolint.yaml
        parseJson:
          column: column
          line: line
          message: ${message} [${code}]
          security: level
        securities:
          error: error
          info: info
          style: hint
          warning: warning

    filetypes:
      dockerfile:
        - hadolint
      sh:
        - shellcheck

  install:
    npm:
      - diagnostic-languageserver

- server: jsonls
  bin: vscode-json-languageserver
  install:
    npm:
      - vscode-json-languageserver

- server: yamlls
  bin: yaml-language-server
  install:
    npm:
      - yaml-language-server


- server: texlab
  bin: texlab
  install:
    script:
      env:
        MAC_URI: https://github.com/latex-lsp/texlab/releases/download/v2.2.2/texlab-x86_64-macos.tar.gz
        LINUX_URI: https://github.com/latex-lsp/texlab/releases/download/v2.2.2/texlab-x86_64-linux.tar.gz
      body: |-
        set -eu
        set -o pipefail

        if [[ "$OS" == 'Darwin' ]]
        then
          URI="$MAC_URI"
        else
          URI="$LINUX_URI"
        fi

        TMP="$(mktemp)"
        get --print-dest "$TMP" "$URI"
        unpack "$(<"$TMP")" "$TMP_DIR"
        mv "${TMP_DIR}/${BIN_NAME}" "$BIN_PATH"
        chmod +x "$BIN_PATH"

- server: bashls
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

- server: dockerls
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

- server: pyright
  bin: pyright-langserver
  install:
    npm:
      - pyright

- server: rust_analyzer
  bin: rust-analyzer
  install:
    script:
      env:
        URI_ROOT: https://github.com/rust-analyzer/rust-analyzer/releases/download
        MAC_OS: rust-analyzer-mac
        LINUX: rust-analyzer-linux
        RELEASE: "2020-12-28"
      body: |-
        set -eu
        set -o pipefail

        if [[ "$OS" == 'Darwin' ]]
        then
          PLATFORM="$MAC_OS"
        else
          PLATFORM="$LINUX"
        fi
        get "${URI_ROOT}/${RELEASE}/${PLATFORM}" --dest "$BIN_PATH"
        chmod +x "$BIN_PATH"

- server: gopls
  bin: gopls
  install:
    go:
      - golang.org/x/tools/gopls@latest

- server: sourcekit
  bin: xcrun

- server: sqlls
  bin: sql-language-server
  args:
    - up
    - --method
    - stdio
  install:
    npm:
      - sql-language-server

- server: rome
  bin: rome
  install:
    npm:
      - rome

- server: tsserver
  bin: typescript-language-server
  install:
    npm:
      - typescript
      - typescript-language-server

- server: html
  bin: html-languageserver
  install:
    npm:
      - vscode-html-languageserver-bin

- server: cssls
  bin: css-languageserver
  install:
    npm:
      - vscode-css-languageserver-bin

- server: graphqlls
  bin: graphql-lsp
  args:
    - server
  filetypes:
    - graphql
    - javascript
    - javascript.jsx
    - javascriptreact
    - typescript
    - typescript.tsx
    - typescriptreact
  root:
    fallback: none
    exact:
      - .graphqlrc
      - .graphqlrc.js
      - .graphqlrc.json
      - .graphqlrc.yaml
      - .graphqlrc.yml
      - graphql.config.js
      - graphql.config.json
      - graphql.config.yaml
      - graphql.config.yml
  settings: {}
  install:
    npm:
      - graphql-language-service-cli

- server: r_language_server
  bin: R

- server: vimls
  bin: vim-language-server
  install:
    npm:
      - vim-language-server
